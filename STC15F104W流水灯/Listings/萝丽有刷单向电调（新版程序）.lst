C51 COMPILER V9.60.0.0   ____________________________                                      06/22/2023 21:53:50 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ____________________________
OBJECT MODULE PLACED IN .\Objects\萝丽有刷单向电调（新版程序）.obj
COMPILER INVOKED BY: D:\software\Keil_v5\C51\BIN\C51.EXE 萝丽有刷单向电调（新版程序）.c OPTIMIZE(8,SPEED) BROWSE DEBUG O
                    -BJECTEXTEND PRINT(.\Listings\萝丽有刷单向电调（新版程序）.lst) TABS(2) OBJECT(.\Objects\萝丽有刷单向电调（新版程序）.obj
                    -)

line level    source

   1          #include<reg51.h>
   2           
   3          #define u8 unsigned char
   4          #define u16 unsigned int
   5          
   6          sfr P3M1=0xb1;
   7          sfr P3M0=0xb2;
   8          
   9          sfr IAP_DATA=0xc2;
  10          sfr IAP_ADDRH=0xc3;
  11          sfr IAP_ADDRL=0xc4;
  12          sfr IAP_CMD=0xc5;
  13          sfr IAP_TRIG=0xc6;
  14          sfr IAP_CONTR=0xc7;
  15          
  16          sfr AUXR=0x8e;
  17          sfr T2H=0xd6;
  18          sfr T2L=0xd7;
  19          sfr IE2=0xaf;
  20          
  21          sbit LED=P3^2;
  22          sbit PWM=P3^3;
  23          sbit IN=P3^1;  //原P3.4
  24          
  25          u16 time,proportion,tt,MAX,MIN,k ;
  26          u8  H_l,H_h,L_l,L_h;
  27          u8 low,top,ok,lose,calabration,MARK1,MARK2,over=1,error;
  28          bit turn;
  29          
  30          void Delay1ms()   //@12.000MHz
  31          {
  32   1        unsigned char i, j;
  33   1      
  34   1        i = 12;
  35   1        j = 169;
  36   1        do
  37   1        {
  38   2          while (--j);
  39   2        } while (--i);
  40   1      }
  41          
  42          void delay(u16 t)
  43          {
  44   1        while(t--)
  45   1        Delay1ms();
  46   1      }
  47          
  48          u8 EEPROM_read(u8 address)
  49          {
  50   1        IAP_CMD=0x01;
  51   1        IAP_ADDRH=0;
  52   1        IAP_ADDRL=address;
  53   1        IAP_TRIG=0x5a;
C51 COMPILER V9.60.0.0   ____________________________                                      06/22/2023 21:53:50 PAGE 2   

  54   1        IAP_TRIG=0xa5; 
  55   1        return IAP_DATA;
  56   1      }
  57          
  58          void EEPROM_write(u8 address,u8 byte)
  59          {
  60   1        IAP_CMD=0x02;
  61   1        IAP_DATA=byte;
  62   1        IAP_ADDRH=0;
  63   1        IAP_ADDRL=address;
  64   1        IAP_TRIG=0x5a;
  65   1        IAP_TRIG=0xa5; 
  66   1        
  67   1      }
  68          
  69          void EEPROM_clean(u8 address)
  70          {
  71   1        IAP_CMD=0x03;
  72   1        IAP_ADDRH=0;
  73   1        IAP_ADDRL=address;
  74   1        IAP_TRIG=0x5a;
  75   1        IAP_TRIG=0xa5;
  76   1      }
  77          
  78          void DATA_read()
  79          {
  80   1        IAP_CONTR=0x82;
  81   1        MARK1=EEPROM_read(0);
  82   1        MARK2=EEPROM_read(1);
  83   1        MAX=EEPROM_read(2);
  84   1        MAX<<=8;
  85   1        MAX+=EEPROM_read(3);
  86   1        MIN=EEPROM_read(4);
  87   1        MIN<<=8;
  88   1        MIN+=EEPROM_read(5);
  89   1        IAP_CONTR=0;
  90   1      }
  91          
  92          void DATA_save()
  93          {
  94   1        IAP_CONTR=0x82;
  95   1        EEPROM_clean(0);
  96   1        EEPROM_write(0,0x0f);
  97   1        EEPROM_write(1,0xa5);
  98   1        EEPROM_write(2,MAX>>8);
  99   1        EEPROM_write(3,MAX);
 100   1        EEPROM_write(4,MIN>>8);
 101   1        EEPROM_write(5,MIN);
 102   1        IAP_CONTR=0;
 103   1      }
 104          
 105          void measure()
 106          {
 107   1        time=0;
 108   1        TL0=0,TH0=0;
 109   1        while(!IN);
 110   1        TR0=1; 
 111   1        while(IN);
 112   1        TR0=0; 
 113   1        time=TH0;
 114   1        time<<=8;
 115   1        time+=TL0;    
C51 COMPILER V9.60.0.0   ____________________________                                      06/22/2023 21:53:50 PAGE 3   

 116   1      }
 117          
 118          void LED_flash(u8 m)
 119          {
 120   1        while(m--)
 121   1        {
 122   2          LED=1;delay(50);
 123   2          LED=0;delay(50);
 124   2        }
 125   1      }
 126          
 127          
 128          void initial()
 129          {
 130   1        u8 i;
 131   1        PWM=0;//新增 有些人下载时不勾选开机低电平导致出错，现在由程序开启；
 132   1        P3M0=0x0c;
 133   1        TMOD=0x01;
 134   1        delay(100);
 135   1      
 136   1      
 137   1        measure();
 138   1        measure();
 139   1        measure();
 140   1        measure();
 141   1        measure();
 142   1      
 143   1      
 144   1        while(PCON)
 145   1        {
 146   2        PCON=0,delay(10);       //低压保护，如果1S电池的电压低于
 147   2        }               //下载时的设定值，则在此死循环
 148   1      
 149   1        
 150   1        
 151   1      
 152   1        DATA_read();
 153   1        if(MARK1!=0x0f||MARK2!=0xa5)//新增 16bit验证，降低错误率
 154   1        {
 155   2          
 156   2          MAX=1950;MIN=1000;//新增 开机自带1ms-2ms标准行程
 157   2          
 158   2        }
 159   1        
 160   1        over=1;
 161   1        while(over)
 162   1        {
 163   2          measure();
 164   2          
 165   2          if(time>1700)//重新校准行程判断
 166   2          {
 167   3            i++;
 168   3            if(i>100)over=0,calabration=1;
 169   3          }
 170   2          else          //
 171   2          {
 172   3            if(time<MIN+100)over=0;
 173   3          }
 174   2        } 
 175   1        
 176   1        
 177   1        if(MAX>2200||MIN<800)//新增 数据验证，降低错误率
C51 COMPILER V9.60.0.0   ____________________________                                      06/22/2023 21:53:50 PAGE 4   

 178   1        {
 179   2          calabration=1;
 180   2          if(MAX<1700||MIN>1300)calabration=1;
 181   2        }
 182   1      
 183   1        if(calabration)
 184   1        {
 185   2          while(over)
 186   2          {
 187   3            measure();
 188   3            if(time>1700)over=0;
 189   3          }
 190   2          delay(1000);
 191   2          LED_flash(10);
 192   2          measure();
 193   2          measure();
 194   2          if(time>800&&time<2200)MAX=time;
 195   2          else error=1;  
 196   2          
 197   2          over=1;
 198   2          while(over)
 199   2          {
 200   3            measure();
 201   3            if(time<1300)over=0;
 202   3          }  
 203   2          delay(1000);
 204   2          LED_flash(10);
 205   2          measure();
 206   2          measure();
 207   2          if(time>800&&time<2200)MIN=time;
 208   2          else error=1;
 209   2      
 210   2          if(error==0)DATA_save();  
 211   2      
 212   2        }
 213   1      
 214   1          
 215   1      }
 216          
 217          main()
 218          {
 219   1        initial();
 220   1        k=MAX-MIN;
 221   1        IE=0x80;
 222   1        IE2=0x04;
 223   1      
 224   1        while(1)
 225   1        {
 226   2          measure();
 227   2          if(lose)
 228   2          {
 229   3            delay(1000);
 230   3            measure();
 231   3            measure();
 232   3          } 
 233   2          
 234   2          if(time>800&&time<2260)
 235   2          {
 236   3             
 237   3            
 238   3            ok=1;lose=0;AUXR=0x10;
 239   3      
C51 COMPILER V9.60.0.0   ____________________________                                      06/22/2023 21:53:50 PAGE 5   

 240   3      
 241   3            
 242   3            if(time>MAX-20)time=MAX-20,top=1;
 243   3            else top=0;
 244   3            if(time<MIN+100)time=MIN+100,low=1;
 245   3            else low=0;
 246   3        
 247   3            proportion=(long)(time-MIN )*1000/k;
 248   3            H_l=65535-proportion ;  
 249   3            H_h=((65535-proportion)>>8);
 250   3            L_l=64535+proportion;
 251   3            L_h=((64535+proportion)>>8);
 252   3          }
 253   2               
 254   2      
 255   2        }
 256   1      }
 257          
 258          void et2()interrupt 12
 259          {
 260   1      
 261   1        turn=!turn;
 262   1        if(turn)
 263   1        {
 264   2          if(top)PWM=1,T2L=0x0b,T2H=0xfe;
 265   2          else PWM=0,T2L=H_l,T2H=H_h;
 266   2        }
 267   1        else 
 268   1        {
 269   2          if(low)PWM=0,T2L=0x0b,T2H=0xfe;
 270   2          else PWM=1,T2L=L_l,T2H=L_h;
 271   2        }
 272   1      
 273   1        LED=PWM;//新增LED亮度随油门变化
 274   1        
 275   1        tt++;
 276   1        if(ok)tt=0;
 277   1      
 278   1        else {if(tt>2000)tt=2000,PWM=0,turn=0,AUXR=0,LED=0,lose=1;}
 279   1        ok=0;
 280   1      
 281   1      
 282   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    981    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     25       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
