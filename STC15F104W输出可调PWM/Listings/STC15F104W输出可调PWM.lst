C51 COMPILER V9.60.0.0   STC15F104W________PWM                                             07/22/2023 22:36:34 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE STC15F104W________PWM
OBJECT MODULE PLACED IN .\Objects\STC15F104W输出可调PWM.obj
COMPILER INVOKED BY: D:\software\Keil_v5\C51\BIN\C51.EXE STC15F104W输出可调PWM.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\libs
                    -;..\libs) DEBUG OBJECTEXTEND PRINT(.\Listings\STC15F104W输出可调PWM.lst) TABS(2) OBJECT(.\Objects\STC15F104W输出可调PWM.
                    -obj)

line level    source

   1          #include <STC15F2K60S2.H>
   2          #include "SYS_DELAY_MS.H"
   3          
   4          /* 以12MHZ时钟频率为例
   5          时钟周期：1/时钟频率
   6          机器周期(定时存储器加1的时间)：12*时钟周期
   7          最大定时时间：65535 *12 * (1/12000000) = 71ms
   8          假设PWM频率1000HZ, 则周期 = 1/1000 =0.001 = 1ms
   9          设置定时器每0.01ms = 10us中断一次，则0.01 * 100 次 = 1ms
  10          */
  11          
  12          #define MACH_Fosc 60                  //设置机器频率,单位HZ
  13          #define MACH_PERIOD 1000000/MACH_Fosc  //计算机器周期 us
  14          #define timer  MACH_PERIOD/100        //假设中断100次，计算中断时长，单位us
  15          
  16          typedef unsigned char uchar;
  17          typedef unsigned int uint;
  18          typedef unsigned long ulong;
  19          
  20          uchar cnt=0;      //定义计数初始值为0
  21          uchar duty=3;   //定义初始占空比 
  22          
  23          // 定时器0初始化函数，可以在stc-isp软件中自动生成
  24          void Timer0_Init(void)    //1毫秒@12.000MHz
  25          {
  26   1        AUXR |= 0x80;     //定时器时钟1T模式
  27   1        TMOD &= 0xF0;     //设置定时器模式
  28   1        TL0 = (65536 - timer)%256;        //设置定期器初始值低8位
  29   1        TH0 = (65536 - timer)/256;        //设置定期器初始值高8位
  30   1        TF0 = 0;        //清除TF0标志
  31   1        TR0 = 1;        //定时器0开始计时
  32   1      }
  33          
  34          
  35          //定时器0回调函数
  36          void Timer0_Call(void) interrupt 1
  37          {
  38   1        Timer0_Init();    //定时器初始化
  39   1        cnt++;          // 每中断一次 计数+1
  40   1        if(cnt <= duty){
  41   2          P32 = 1;            // P3^3引脚 输出50%的高电平输出
  42   2        }else if(cnt >=100){
  43   2          cnt = 0;            // 1s 已到，归零
  44   2        }else{
  45   2          P32 = 0;            //P3^3引脚 输出 50%的低电平输出
  46   2        }
  47   1        
  48   1      }
  49          
  50          //外部中断2初始化函数
  51          void Interrupt2_Init(){
  52   1        INT_CLKO |= (1<<4); //00010000; 第5位设为1,或的关系, 其它位保持不变，  
  53   1                          //EX2 =1 中断允许控制
C51 COMPILER V9.60.0.0   STC15F104W________PWM                                             07/22/2023 22:36:34 PAGE 2   

  54   1      //  EA = 1;     //中断总开关， 已在main函数中打开
  55   1      }
  56          
  57          //外部中断2回调函数
  58          void Interrupt2_Call() interrupt 10
  59          { 
  60   1        if(duty < 100){
  61   2          duty += 30;   // 每中断一次，占空比加10；
  62   2        }else{
  63   2          duty = 0;   //占空比到达100% ，设为初始值
  64   2        }
  65   1      }
  66          
  67          void main()
  68          {
  69   1        Timer0_Init();      //定时器0初始化
  70   1        Interrupt2_Init();  //外部中断2初始化
  71   1        EA = 1 ;      //开启中断总开关
  72   1        ET0 = 1;    // 定时器溢出后中断开启
  73   1        
  74   1        while(1){
  75   2          P31 = ~P31;   // P31/P30 交替取反，表现位led交替闪烁
  76   2          P30 = ~P31;
  77   2          DelayNms(300);
  78   2        };
  79   1      }
  80          
  81          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    121    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
